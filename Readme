# 📰 News Verfier 🔍  
A machine learning-powered system for detecting fake news using natural language processing (NLP) techniques and robust classification models.

## 📌 Project Overview  
This project explores a multimodal approach to identifying fake news by combining powerful text preprocessing, multiple machine learning models, and insightful visualizations. It aims to address the growing challenge of misinformation in digital media.

---

## 🚀 Features

### 1. Comprehensive ML Model Integration  
- Implements a range of models: **LSTM, SVM, KNN, Naive Bayes, Random Forest, Decision Tree**  
- Designed for comparative analysis and optimized for accuracy and performance.

### 2. Advanced Preprocessing Pipeline  
- **Lemmatization** to normalize text for better model interpretation  
- **SMOTE oversampling** to handle imbalanced data and boost model robustness

### 3. Visual Analysis & Evaluation  
- Includes **confusion matrices** and **training history plots**  
- Sweetviz reports for data profiling and distribution analysis

### 4. High Accuracy and Robustness  
- Proven effectiveness through testing across diverse models and evaluation metrics

---

## 🛠️ Tech Stack

- **Language:** Python  
- **ML Algorithms:** LSTM, SVM, KNN, Naive Bayes, Random Forest, Decision Tree  
- **Libraries/Frameworks:**  
  - NLP: `NLTK`  
  - ML: `scikit-learn`, `TensorFlow`  
  - Visualization: `Sweetviz`, `Matplotlib`, `Seaborn`  
  - Data Handling: `Pandas`

---

## 📊 Key Components

1. **Model Variety**  
   Applied both traditional (e.g., SVM, Random Forest) and deep learning (LSTM) techniques for comparison.

2. **Text Preprocessing**  
   - *Lemmatization* for normalization  
   - *SMOTE* to address class imbalance

3. **Visualization Tools**  
   - Sweetviz for data exploration  
   - Confusion matrices and plots for model evaluation

---

## 📈 Results & Insights

- Sweetviz reports highlight dataset structure, correlations, and missing data  
- Oversampling greatly improved accuracy on imbalanced datasets  
- Diverse models yielded high classification performance, confirmed by detailed evaluation metrics

---

## 📁 Folder Structure

